# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14wxTxXdv516deQdy37kwaFSG5Wyj7JPP
"""


from PIL import Image, ImageOps
import numpy as np
import streamlit as st
from tensorflow.keras.models import load_model

# Load the model (ensure the path is correct and accessible)
model = load_model('https://github.com/Redfox13oliverdulay/ADS/blob/main/final_model.h5')

def import_and_predict(image_data, model):
    size = (28, 28)  # Target image size for Fashion MNIST
    try:
        # Use Image.Resampling.LANCZOS for high-quality downsampling
        image = ImageOps.fit(image_data, size, Image.Resampling.LANCZOS)
        image = ImageOps.grayscale(image)  # Convert image to grayscale
        img = np.asarray(image)
        img = img / 255.0  # Normalize the image
        img_reshape = img[np.newaxis, ..., np.newaxis]  # Add batch and channel dimensions
        prediction = model.predict(img_reshape)
        return prediction
    except Exception as e:
        st.error(f"Error processing image: {e}")
        return None

# Streamlit web interface
st.title('Fashion MNIST Prediction App')
st.write('This app predicts the clothing category from images.')

uploaded_file = st.file_uploader("Choose an image...", type=['png', 'jpg', 'jpeg'])

if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption='Uploaded Image.', use_column_width=True)
    st.write("")
    st.write("Classifying...")
    label_map = {
        0: "T-shirt/top",
        1: "Trouser",
        2: "Pullover",
        3: "Dress",
        4: "Coat",
        5: "Sandal",
        6: "Shirt",
        7: "Sneaker",
        8: "Bag",
        9: "Ankle boots"
    }
    prediction = import_and_predict(image, model)
    if prediction is not None:
        st.write(f"Prediction: {label_map[np.argmax(prediction)]}")

